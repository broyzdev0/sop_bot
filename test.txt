package main

import (
	"context"
	"fmt"
	"log"
	"os"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"golang.org/x/oauth2/google"
	"google.golang.org/api/option"
	"google.golang.org/api/sheets/v4"
)

const (
	spreadsheetId = "1MM6dz5xkF9e8YC_iyHEwW1ksiWqe_TTUr6gbRm07-3s"
	sheetRange    = "Sheet1!A2:B"
	botToken      = "7644970055:AAHIkxh11yJG2R4iQgU6sXtionEXrK5kypo"
)

const allowedGroupID int64 = -1002607079668

func getSOP(query string) string {
	ctx := context.Background()

	b, err := os.ReadFile("credentials.json")
	if err != nil {
		return "Gagal baca credentials"
	}

	conf, err := google.JWTConfigFromJSON(b, sheets.SpreadsheetsReadonlyScope)
	if err != nil {
		return fmt.Sprintf("Gagal parse JWT: %v", err)
	}
	client := conf.Client(ctx)

	srv, err := sheets.NewService(ctx, option.WithHTTPClient(client))
	if err != nil {
		return fmt.Sprintf("Gagal buat service: %v", err)
	}

	resp, err := srv.Spreadsheets.Values.Get(spreadsheetId, sheetRange).Do()
	if err != nil {
		return fmt.Sprintf("Gagal akses Google Sheet: %v", err)
	}

	for _, row := range resp.Values {
		if len(row) >= 2 && strings.Contains(strings.ToLower(row[0].(string)), strings.ToLower(query)) {
			return row[1].(string)
		}
	}

	return "SOP tidak ditemukan  atau bisa tanya A Ronald"
}

func main() {
	bot, err := tgbotapi.NewBotAPI(botToken)
	if err != nil {
		log.Fatal(err)
	}

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message != nil {
			chatID := update.Message.Chat.ID
			chat := update.Message.Chat

			if chat.Type == "private" {
				continue
			}

			if chatID != allowedGroupID {
				continue
			}

			text := update.Message.Text
			response := getSOP(text)
			msg := tgbotapi.NewMessage(chatID, response)
			bot.Send(msg)
		}
	}
}
